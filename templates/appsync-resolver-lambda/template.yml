AWSTemplateFormatVersion: "2010-09-09"
Description: AppSync CloudFormation template

Resources:
  GraphQLApi:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: "${graphQlApiName}"
      AuthenticationType: "AMAZON_COGNITO_USER_POOLS"
      UserPoolConfig:
        UserPoolId: "${userPoolId}"
        AwsRegion: "${AwsRegion}"
        DefaultAction: "ALLOW"

  GraphQLSchema:
      Type: AWS::AppSync::GraphQLSchema
      Properties:
        ApiId: !GetAtt [GraphQLApi, ApiId]
        Definition: "${file(./stacks/GraphQLApi/schema.graphql)}"

  ####################################################################################

  ToDosDatasource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: !GetAtt [GraphQLApi, ApiId]
      Name: "${ToDosTableName}Ds"
      Description: "ToDos from CF"
      Type: AMAZON_DYNAMODB
      ServiceRoleArn: !GetAtt [ ToDoTableDSRole, Arn ]
      DynamoDBConfig:
        AwsRegion: "${AwsRegion}"
        TableName: "${ToDosTableName}"
        UseCallerCredentials: false

  ToDoTableDSRole: 
    Type: AWS::IAM::Role
    Properties:
      RoleName: "${ToDosTableName}-Role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - appsync.amazonaws.com
            Action:
                - sts:AssumeRole
      Policies:
        - PolicyName: "${ToDosTableName}-DsRolePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:*
                Resource:
                  - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${ToDosTableName}"
                  - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${ToDosTableName}/*"

  ####################################################################################

  GraphQlFunctionConfigurationGetToDo:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId: !GetAtt [GraphQLApi, ApiId]
      Name: GraphQlFunctionConfigurationGetToDo
      DataSourceName: !GetAtt [ToDosDatasource, Name]
      RequestMappingTemplate: "${file(./stacks/GraphQLApi/resolvers/GetToDo.request.vtl)}"
      ResponseMappingTemplate: "${file(./stacks/GraphQLApi/resolvers/GetToDo.response.vtl)}"
      FunctionVersion: '2018-05-29'

  GraphQlResolverQueryGetToDo:
    Type: AWS::AppSync::Resolver
    DependsOn: GraphQLSchema
    Properties:
      ApiId: !GetAtt [GraphQLApi, ApiId]
      TypeName: Query
      FieldName: getToDo
      RequestMappingTemplate: "${file(./stacks/GraphQLApi/resolvers/request.before.vtl)}"
      ResponseMappingTemplate: "${file(./stacks/GraphQLApi/resolvers/response.after.vtl)}"
      Kind: PIPELINE
      PipelineConfig:
        Functions:
          - !GetAtt [GraphQlFunctionConfigurationGetToDo, FunctionId]

  ####################################################################################

  GraphQlFunctionConfigurationCreateToDo:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId: !GetAtt [GraphQLApi, ApiId]
      Name: GraphQlFunctionConfigurationCreateToDo
      DataSourceName: !GetAtt [ToDosDatasource, Name]
      RequestMappingTemplate: "${file(./stacks/GraphQLApi/resolvers/CreateToDo.request.vtl)}"
      ResponseMappingTemplate: "${file(./stacks/GraphQLApi/resolvers/CreateToDo.response.vtl)}"
      FunctionVersion: '2018-05-29'

  GraphQlResolverQueryCreateToDo:
    Type: AWS::AppSync::Resolver
    DependsOn: GraphQLSchema
    Properties:
      ApiId: !GetAtt [GraphQLApi, ApiId]
      TypeName: Mutation
      FieldName: createToDo
      RequestMappingTemplate: "${file(./stacks/GraphQLApi/resolvers/request.before.vtl)}"
      ResponseMappingTemplate: "${file(./stacks/GraphQLApi/resolvers/response.after.vtl)}"
      Kind: PIPELINE
      PipelineConfig:
        Functions:
          - !GetAtt [GraphQlFunctionConfigurationCreateToDo, FunctionId]


Outputs:
  GraphQLApiUrl:
    Description: GraphQLApi URL
    Value: !GetAtt [ GraphQLApi, GraphQLUrl ]